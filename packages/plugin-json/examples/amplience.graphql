# pages blocks slot header footer menu
scalar AmplienceImage
scalar AmplienceVideo
# enum
enum BackgroundColor {
  white
  lightGray
  darkGray
}
enum SliderSize {
  big
  medium
  small
}
enum SliderStyle {
  homepage
  subpage
}
enum BrandBlockSize {
  big
  medium
  small
}
enum Positions {
  bottomCentre
  bottomRight
  centre
}
enum Visibility {
  visible
  hidden
  onHover
}
enum HoverEffect {
  zoom
  none
}
enum SubtitleVisibility {
  visible
  onHover
}
enum TextDirection {
  column
  row
}
enum TitlePosition {
  centre
  bottomLeft
}
enum ImageAlignment {
  left
  right
}

union Block =
    MarkdownBlock
  | AccordionBlock
  | AlertBlock
  | AllBrandsListBlock
  | BannerColumnBlock
  | BannerSliderBlock
  | BrandListBlock
  | CardsBlock
  | CategoryMenuBlock
  | CollectionBannerBlock
  | CollectionCarouselBlock
  | ContentSliderBlock
  | ContentTileBlock
  | DesignerBlock
  | ExpertBlock
  | FeaturedBlock
  | FrequentlyAskedQuestionsBlock
  | GenericContentGridBlock
  | ImageBlock
  | ImagesBlock
  | InstagramBlock
  | IntroBlock
  | ProductsBlock
  | QuickLinksBlock
  | SeoTextBlock
  | SimpleCategoryMenuBlock
  | TopProductListBlock
  | TopProductSliderBlock
  | TriviantBlock
  | YoutubeBlock

type MarkdownBlock @amplience {
  content: String! @localized @text(format: markdown)
}

type AccordionBlock @amplience {
  title: String! @localized
  items: [AccordionItem]!
}

type AlertBlock @amplience {
  content: String! @localized @text(format: markdown)
}

type AllBrandsListBlock @amplience {
  brandsLetterGroups: [AllBrandsListBlockItem]! @link
}

type AllBrandsListBlockItem @amplience {
  """
  A single letter of the alphabet, a number, or special character that all brand names in "Links" start with.
  """
  letter: String! @localized @text(maxLength: 1)
  links: [BrandLink]!
}

type BrandLink implements LocalizablePageLink {
  """
  No op attribute for schema generate no empty interface
  """
  isBrandLink: String
  """
  URL can be both absolute and relative
  """
  url: String! @text(pattern: "^(?!\\/).*")
  """
  Product key in commercetools
  """
  productKey: String
  """
  Link or button text
  """
  linkText: String! @localized
  newTab: Boolean!
}

type BannerColumnBlock @amplience {
  column: [ColumnBlock]! @list(minItems: 2, maxItems: 4) @inline
  allLink: LocalizablePageLink @inline
}

type ColumnBlock @amplience {
  title: String @localized
  content: String @localized @text(format: markdown)
  link: LocalizablePageLink @inline
  image: AmplienceImage
  imageMobile: AmplienceImage
  imageAlt: String @localized
}

type BannerSliderBlock @amplience {
  items: [ImageBlock]! @link @list(minItems: 1)
  size: SliderSize!
  isMulti: Boolean!
  style: SliderStyle!
  """
  Autoplay Speed in ms (Set to 0 to disable autoplay)
  """
  autoplay: Int @number(minimum: 0)
}

type BrandListBlock @amplience {
  title: String @localized
  brandBlockSize: BrandBlockSize!
  brands: [BrandBlock]! @link
  allLink: LocalizablePageLink @link
}

type BrandBlock @amplience {
  logo: AmplienceImage!
  logoAlt: String @localized
  link: LocalizablePageLink! @inline
}

type CardsBlock @amplience {
  title: String @localized
  viewAllLink: LocalizablePageLink @inline
  cards: [Card]! @list(minItems: 1)
}

type Card {
  title: String @localized
  image: AmplienceImage
  paragraph: String @localized
  link: LocalizablePageLink @inline
}

type CategoryMenuBlock @amplience {
  items: [CategoryMenuColumn]! @list(minItems: 1, maxItems: 4)
}

type CategoryMenuColumn {
  items: [CategoryMenuGroup]! @list(minItems: 1)
}

type CategoryMenuGroup {
  title: String @localized
  links: [LocalizablePageLink]! @list(minItems: 1) @inline
  allLink: LocalizablePageLink @link @inline
}

type CollectionBannerBlock @amplience {
  title: String! @localized
  subtitle: String @localized
  description: String! @localized
  image: AmplienceImage!
  link: LocalizablePageLink @inline
}

type CollectionCarouselBlock @amplience {
  title: String @localized
  tag: Tag @link
  subtitle: String @localized
  image: AmplienceImage!
  imageMobile: AmplienceImage
  imageAlt: String @localized
  link: LocalizablePageLink @link
  linkPosition: Positions
  linkVisibility: Visibility
  hoverEffect: HoverEffect
  subtitleVisibility: SubtitleVisibility
  textDirection: TextDirection
  titlePosition: TitlePosition
  productKeys: [String]! @list(minItems: 1)
}

type ContentSliderBlock @amplience {
  title: String! @localized
  items: [ContentSliderItem]! @list(minItems: 1)
}

type ContentSliderItem {
  title: String! @localized
  image: AmplienceImage!
  link: LocalizablePageLink @inline
}

type ContentTileBlock @amplience {
  title: String! @localized
  content: String! @localized @text(format: markdown)
  link: LocalizablePageLink @inline
  image: AmplienceImage
  imageAlt: String @localized
}

type DesignerBlock @amplience {
  """
  The name of the designer.
  """
  name: String!
  image: AmplienceImage!
  imageAlt: String @localized
  descriptionList: [DescriptionItem]!
}

type DescriptionItem {
  term: String! @localized
  description: String! @localized
}

type ExpertBlock @amplience {
  name: String!
  image: AmplienceImage
  imageAlt: String @localized
  description: String! @localized
}

type FeaturedBlock @amplience {
  image: AmplienceImage!
  title: String @localized
  content: String @localized
  link: LocalizablePageLink @inline
}

type FrequentlyAskedQuestionsBlock @amplience {
  title: String! @localized
  items: [QuestionWithAnswer]!
}

type QuestionWithAnswer {
  question: String! @localized
  answer: String @localized @text(format: markdown)
}

type GenericContentGridBlock @amplience {
  title: String! @localized
  items: [GenericContentGridItem]! @list(minItems: 1)
}

type GenericContentGridItem {
  title: String! @localized
  image: AmplienceImage!
  link: LocalizablePageLink @inline
}

type IconWithTextBlock @amplience {
  iconName: String
  title: String
  """
  Enter text using rich text or markdown
  """
  text: String @text(format: markdown)
  """
  URL can be both absolute and relative
  """
  url: String
}

type ImageBlock
  @amplience
  @icon(url: "https://bigcontent.io/cms/icons/ca-types-image.png") {
  title: String @localized
  tag: Tag @link
  subtitle: String @localized
  image: AmplienceImage!
  imageMobile: AmplienceImage
  imageAlt: String @localized
  link: LocalizablePageLink @link
  linkPosition: Positions
  linkVisibility: Visibility
  hoverEffect: HoverEffect
  subtitleVisibility: SubtitleVisibility
  textDirection: TextDirection
  titlePosition: TitlePosition
}

type ImagesBlock @amplience {
  images: [ImagesBlockItem]! @list(minItems: 1, maxItems: 3)
}

type ImagesBlockItem {
  image: AmplienceImage!
  imageAlt: String @localized
  caption: String @localized
}

type InstagramBlock @amplience {
  """
  The Instagram post id is the last part in an instagram post link.
  For example: https://instagr.am/p/<POST_ID>
  """
  postId: String!
}

type IntroBlock @amplience {
  title: String! @localized
  introText: String! @localized @text(format: markdown)
  completeText: String @localized @text(format: markdown)
  image: AmplienceImage
  imageAlt: String @localized
}

"""
Small component where a visitor can enter their email to sign up to our newsletter.
"""
type NewsletterBlock @amplience {
  """
  Enter a title (0 to 100 characters)
  """
  title: String @text(minLength: 0, maxLength: 100)
  """
  Enter text using rich text or markdown
  """
  smallprint: String @text(format: markdown)
}

type ProductsBlock @amplience {
  title: String @localized
  productKeys: [String]! @list(minItems: 1)
}

type PromotionBanner @amplience {
  title: String! @localized
  subtitle: String @localized
  tag: Tag @inline
  thumbnail: AmplienceImage
  thumbnailAlt: String @localized
  link: LocalizablePageLink @inline
}

type QuickLinksBlock @amplience {
  title: String @localized
  quickLinks: [QuickLinkBlock]!
}

type QuickLinkBlock {
  text: String! @localized
  link: LocalizablePageLink @inline
}

type SeoTextBlock @amplience {
  items: [SeoTextColumn]! @list(minItems: 1, maxItems: 2)
}

type SeoTextColumn {
  content: String! @localized @text(format: markdown)
}

type SimpleCategoryMenuBlock @amplience {
  title: String @localized
  links: [LocalizablePageLink]! @list(minItems: 1) @inline
}

type Tag @amplience {
  title: String! @localized
  color: String! @text(format: color)
}

type TopProductListBlock @amplience {
  title: String! @localized
  amount: Int! @number(minimum: 1)
  items: [TopProductListItem]! @list(minItems: 1)
}

type TopProductListItem {
  description: String! @localized @text(format: markdown)
  productKey: String!
}

type TopProductSliderBlock @amplience {
  title: String! @localized
  amount: Int! @number(minimum: 1)
  """
  Autoplay Speed in ms (Set to 0 to disable autoplay)
  """
  autoplay: Int @number(minimum: 0)
  productKeys: [String]! @list(minItems: 1)
}

type TriviantBlock @amplience {
  title: String! @localized
  image: AmplienceImage!
  imageAlt: String @localized
  content: String! @localized @text(format: markdown)
  pageLink: LocalizablePageLink @link
  imageAlignment: ImageAlignment!
}

type YoutubeBlock @amplience {
  """
  The ID a of a youtube video. The "v" part of the url.
  For example: https://www.youtube.com/watch?v=<YOUTUBE_ID>&t=123y)
  """
  youtubeId: String!
}

type LocalizablePageLink @amplience {
  """
  URL can be both absolute and relative
  """
  url: String! @text(pattern: "^(?!\\/).*")
  """
  Product key in commercetools
  """
  productKey: String
  """
  Link or button text
  """
  linkText: String! @localized
  newTab: Boolean!
}

type ContentColumnsBlock @amplience {
  contentColumns: [ContentColumn]! @list(minItems: 1, maxItems: 4) @inline
  backgroundColor: BackgroundColor
  """
  Allow this section on the page to be linked to with #thisAnchorId
  """
  anchorId: String
  """
  Give the row a max-width container (as opposed to full width)
  """
  container: Boolean!
}

type ContentColumn @amplience {
  blocks: [Block]! @link @list(minItems: 1, maxItems: 1)
  """
  Number of columns the column will span (relative to the others in its row)
  """
  colspan: Int @number(minimum: 1, maximum: 3)
}

type AccordionItem {
  title: String! @localized
  content: String! @localized @text(format: markdown)
}

union FooterBlock = IconWithTextBlock | NewsletterBlock

type SiteFooter @amplience {
  footerBlocksSlot: FooterBlocksSlot!
}

type FooterBlocksSlot @slot @amplience(validationLevel: SLOT) {
  blocks: [FooterBlock]! @link @list(minItems: 1, maxItems: 3)
}

type BlocksSlot @slot @amplience(validationLevel: SLOT) {
  blocks: [ContentColumnsBlock]! @link
}

# common-header-menu-pages
scalar AmplienceImage

enum BlackOrWhite {
  white
  black
}
type ContentReference {
  contentType: String!
  id: ID!
  slug: String!
}

type OptionalLink @amplience {
  """
  Amplience content page, if this gets selected the url field will be ignored
  """
  page: ContentPageContent @reference
  """
  URL can be both absolute and relative
  """
  url: String @text(pattern: "^(?!\\/).*")
  linkText: String
  newTab: Boolean!
}

type LocalizablePageLink @amplience {
  """
  URL can be both absolute and relative
  """
  url: String! @text(pattern: "^(?!\\/).*")
  """
  Product key in commercetools
  """
  productKey: String
  """
  Link or button text
  """
  linkText: String! @localized
  newTab: Boolean!
}

"""
A Unique Selling Point
"""
type Usp @partial @amplience {
  """
  The label that will be displayed for this USP
  """
  label: String!
  """
  The URL that this USP will link to
  """
  href: String!
  """
  The background colour of the USP (Hexadecimal value)
  """
  backgroundColorHex: String @text(pattern: "[a-fA-F0-9]{3}|[a-fA-F0-9]{6}")
  """
  The text colour of the USP
  """
  textColor: BlackOrWhite
}

type SiteHeader @amplience {
  usps: [Usp]! @inlineLink
  """
  The colour of the top part of the USP (Hexadecimal value)
  """
  titleColorHex: String @text(pattern: "[a-fA-F0-9]{3}|[a-fA-F0-9]{6}")
  """
  The colour of the text on the top part of the USP
  """
  titleTextColor: BlackOrWhite
  """
  The colour of the top part of the USP (Hexadecimal value)
  """
  ctaColorHex: String @text(pattern: "[a-fA-F0-9]{3}|[a-fA-F0-9]{6}")
  """
  The colour of the text on the top part of the USP
  """
  ctaTextColor: BlackOrWhite
}

"""
Provides basic sortable trait for hierarchy type
"""
type BaseMenuNode {
  """
  Display order in which menu item should be displayed
  """
  order: Int @sortable
  """
  Display text for menu item
  """
  title: String! @text(minLength: 0, maxLength: 100)
  """
  This might be a more condensed version that fits better on smaller screens
  """
  mobileTitle: String @text(minLength: 0, maxLength: 25)
  """
  Link to a page or URL
  """
  link: OptionalLink
  """
  Image (only visible in special cases such as in a featured submenu)
  """
  image: AmplienceImage
  """
  Indicates if menu item is in enabled/disabled state
  """
  disabled: Boolean!
  """
  Indicates whether the item should be hidden on mobile
  """
  hiddenOnMobile: Boolean!
  """
  Indicate whether the item should be on desktop
  """
  hiddenOnDesktop: Boolean!
  """
  Add extra classnames that can be used to the front-end
  """
  extraClassNames: [String]
}

type TopLevelMenuNode implements BaseMenuNode
  @amplience(validationLevel: HIERARCHY)
  @hierarchy {
  childMenuNode: [ChildMenuNode]! @children
  """
  Display order in which menu item should be displayed
  """
  order: Int @sortable
  """
  Display text for menu item
  """
  title: String! @text(minLength: 0, maxLength: 100)
  """
  This might be a more condensed version that fits better on smaller screens
  """
  mobileTitle: String @text(minLength: 0, maxLength: 25)
  """
  Link to a page or URL
  """
  link: OptionalLink @inline
  """
  Image (only visible in special cases such as in a featured submenu)
  """
  image: AmplienceImage
  """
  Indicates if menu item is in enabled/disabled state
  """
  disabled: Boolean!
  """
  Indicates whether the item should be hidden on mobile
  """
  hiddenOnMobile: Boolean!
  """
  Indicate whether the item should be on desktop
  """
  hiddenOnDesktop: Boolean!
  """
  Add extra classnames that can be used to the front-end
  """
  extraClassNames: [String]
}

type ChildMenuNode implements BaseMenuNode
  @amplience(validationLevel: HIERARCHY)
  @hierarchy {
  """
  Optionally define which group it should go to
  """
  group: Int
  """
  Optionally define which column it should go to
  """
  column: Int
  """
  Display order in which menu item should be displayed
  """
  order: Int @sortable
  """
  Display text for menu item
  """
  title: String! @text(minLength: 0, maxLength: 100)
  """
  This might be a more condensed version that fits better on smaller screens
  """
  mobileTitle: String @text(minLength: 0, maxLength: 25)
  """
  Link to a page or URL
  """
  link: OptionalLink @inline
  """
  Image (only visible in special cases such as in a featured submenu)
  """
  image: AmplienceImage
  """
  Indicates if menu item is in enabled/disabled state
  """
  disabled: Boolean!
  """
  Indicates whether the item should be hidden on mobile
  """
  hiddenOnMobile: Boolean!
  """
  Indicate whether the item should be on desktop
  """
  hiddenOnDesktop: Boolean!
  """
  Add extra classnames that can be used to the front-end
  """
  extraClassNames: [String]
}

type SideMenu @amplience @partial {
  """
  Title of Side Menu
  """
  title: String! @localized
  """
  Small Image, commonly a brand logo
  """
  image: AmplienceImage
  sideMenuItem: [SideMenuItem] @inlineLink
}

type SideMenuItem implements BaseMenuNode @amplience @partial {
  """
  Link to a page or URL
  """
  link: OptionalLink @inline
  childMenuNode: [SideMenuSubItem] @inlineLink
  """
  Display order in which menu item should be displayed
  """
  order: Int @sortable
  """
  Display text for menu item
  """
  title: String! @text(minLength: 0, maxLength: 100)
  """
  This might be a more condensed version that fits better on smaller screens
  """
  mobileTitle: String @text(minLength: 0, maxLength: 25)
  """
  Link to a page or URL
  """
  link: OptionalLink @inline
  """
  Image (only visible in special cases such as in a featured submenu)
  """
  image: AmplienceImage
  """
  Indicates if menu item is in enabled/disabled state
  """
  disabled: Boolean!
  """
  Indicates whether the item should be hidden on mobile
  """
  hiddenOnMobile: Boolean!
  """
  Indicate whether the item should be on desktop
  """
  hiddenOnDesktop: Boolean!
  """
  Add extra classnames that can be used to the front-end
  """
  extraClassNames: [String]
}

type SideMenuSubItem implements BaseMenuNode @amplience @partial {
  """
  Display order in which menu item should be displayed
  """
  order: Int @sortable
  """
  Display text for menu item
  """
  title: String! @text(minLength: 0, maxLength: 100)
  """
  This might be a more condensed version that fits better on smaller screens
  """
  mobileTitle: String @text(minLength: 0, maxLength: 25)
  """
  Link to a page or URL
  """
  link: OptionalLink @inline
  """
  Image (only visible in special cases such as in a featured submenu)
  """
  image: AmplienceImage
  """
  Indicates if menu item is in enabled/disabled state
  """
  disabled: Boolean!
  """
  Indicates whether the item should be hidden on mobile
  """
  hiddenOnMobile: Boolean!
  """
  Indicate whether the item should be on desktop
  """
  hiddenOnDesktop: Boolean!
  """
  Add extra classnames that can be used to the front-end
  """
  extraClassNames: [String]
}

# pages
type ProductListPage @amplience {
  meta: ProductListPageMeta! @link
  content: ProductListPageContent! @inline
}

type PageMeta {
  path: String!
  storeKey: String!
  """
  Title of page when searching
  """
  title: String! @localized
  """
  * Browser title
  """
  browserTitle: String! @localized
  """
  Description used in html meta tag
  """
  description: String @localized
  """
  Keywords used in html meta tag
  """
  keywords: String @localized
  """
  Set noindex tag in the html head segment
  """
  noIndex: Boolean!
}

type ProductListPageMeta implements PageMeta @amplience {
  categoryCode: String!
  categoryCodePrefixed: String! @filterable
  parentCategoryCode: String
  parentHierarchy: [ProductListPageMetaBase]! @list(minItems: 0) @inline
  branchNumber: Int!
  defaultSortOrder: String @text(minLength: 1, maxLength: 25) @filterable
  isNoNav: Int @number(minimum: 0, maximum: 1)
  filters: [ProductListPageFilter] @inline
  # Page Meta
  path: String!
  storeKey: String!
  """
  Title of page when searching
  """
  title: String @localized
  """
  Browser title
  """
  browserTitle: String! @localized
  """
  Description used in html meta tag
  """
  description: String @localized
  """
  Keywords used in html meta tag
  """
  keywords: String @localized
  """
  Set noindex tag in the html head segment
  """
  noIndex: Boolean!
}

type ProductListPageFilter @amplience {
  position: Int!
  filterId: Int!
  filterGroupId: Int!
  attributeId: Int!
  displayText: String!
  attributeName: String!
  defaultSortOrder: Int!
  isCollapsedByDefault: Int!
}

type ProductListPageMetaBase @amplience {
  categoryCode: String!
  name: String! @localized
  path: String!
}

type ProductListPageContent @amplience {
  header: String
  copy: String
}

type ContentPage @amplience {
  # skip in GQL
  meta: PageMeta! @inline
  content: ContentPageContent! @reference
}

union ContentPageContent =
    HomePageContent
  | BrandPageContent
  | SportPageContent
  | OfferPageContent
  | DefaultPageContent

type HomePageContent @amplience {
  topContentSlot: BlocksSlot @link
  middleContentSlot: BlocksSlot @link
  bottomContentSlot: BlocksSlot @link
}

type BrandPageContent @amplience {
  topContentSlot: BlocksSlot @link
  middleContentSlot: BlocksSlot @link
  bottomContentSlot: BlocksSlot @link
  sidebarMenu: SideMenu @inlineLink
}

type SportPageContent @amplience {
  topContentSlot: BlocksSlot @link
  middleContentSlot: BlocksSlot @link
  bottomContentSlot: BlocksSlot @link
  sidebarMenu: SideMenu @inlineLink
}

type OfferPageContent @amplience {
  topContentSlot: BlocksSlot @link
  middleContentSlot: BlocksSlot @link
  bottomContentSlot: BlocksSlot @link
  sidebarMenu: SideMenu @inlineLink
}

type DefaultPageContent @amplience {
  topContentSlot: BlocksSlot @link
  middleContentSlot: BlocksSlot @link
  bottomContentSlot: BlocksSlot @link
  sidebarMenu: SideMenu @inlineLink
}

union ContentValue =
    ContentColumnsBlock
  | ContentColumn
  | MarkdownBlock
  | AccordionBlock
  | AlertBlock
  | AllBrandsListBlock
  | BannerColumnBlock
  | BannerSliderBlock
  | BrandListBlock
  | CardsBlock
  | CategoryMenuBlock
  | CollectionBannerBlock
  | CollectionCarouselBlock
  | ContentSliderBlock
  | ContentTileBlock
  | DesignerBlock
  | ExpertBlock
  | FeaturedBlock
  | FrequentlyAskedQuestionsBlock
  | GenericContentGridBlock
  | ImageBlock
  | ImagesBlock
  | InstagramBlock
  | IntroBlock
  | ProductsBlock
  | QuickLinksBlock
  | SeoTextBlock
  | SimpleCategoryMenuBlock
  | TopProductListBlock
  | TopProductSliderBlock
  | TriviantBlock
  | YoutubeBlock
  | ProductListPageContent
  | HomePageContent
  | BrandPageContent
  | SportPageContent
  | OfferPageContent
  | DefaultPageContent
  | BlocksSlot
scalar AmplienceImage

type LocalizablePageLink @amplience {
  """
  URL can be both absolute and relative
  """
  url: String! @text(pattern: "^(?!\\/).*")
  """
  Product key in commercetools
  """
  productKey: String
  """
  Link or button text
  """
  linkText: String! @localized
  newTab: Boolean!
}

type FacetsConfig @amplience {
  facets: [FacetBlockConfig]! @link
}

union FacetBlockConfig =
    AttributeFacetBlockConfig
  | CategoryFacetBlockConfig
  | RangeFacetBlockConfig

type BaseFacetBlockConfig {
  """
  The facet name that will be used in the url.
  """
  slug: String!
  label: String! @localized
  tooltip: String @localized @text(format: markdown)
  """
  [Default Open]: Collapsible and opened by default.
  [Default Collapsed]: Collapsible and collapsed by default.
  [Fully Shown]: Not collapsible.
  [Hidden]: Not visible on the page, can only be used in the url.
  """
  visibility: FacetVisibility!
  #These fields are required for all but "range" facets.
}

enum FacetVisibility {
  hidden
  defaultOpen
  defaultCollapsed
  fullyShown
}

type FacetOptionsConfig {
  showCounts: Boolean!
  sortBy: FacetSortBy!
  sortOrder: FacetSortOrder!
  """
  The amount of items that are visible above the "Show more" button.
  """
  minimalVisibleOptions: Int!
  """
  If empty, this will show a localized version of "Show more".
  """
  showMoreLabel: String @localized
  """
  If empty, this will show a localized version of "Show less".
  """
  showLessLabel: String @localized
}

enum FacetSortOrder {
  ascending
  descending
}

enum FacetSortBy {
  count
  label
}

type AttributeFacetBlockConfig implements BaseFacetBlockConfig & FacetOptionsConfig
  @amplience {
  """
  A Commercetools facet expression as described in https://docs.commercetools.com/api/projects/products-search#facets.
  """
  commercetoolsAttribute: String!
  """
  If enabled, only products that satisfy all checked options are shown.
  """
  andSelect: Boolean!
  """
  The sorting of the attributes after "show more" has been toggled.
  """
  sortByExtended: FacetSortBy

  """
  The facet name that will be used in the url.
  """
  slug: String!
  label: String! @localized
  tooltip: String @localized @text(format: markdown)
  """
  [Default Open]: Collapsible and opened by default.
  [Default Collapsed]: Collapsible and collapsed by default.
  [Fully Shown]: Not collapsible.
  [Hidden]: Not visible on the page, can only be used in the url.
  """
  visibility: FacetVisibility!
  #These fields are required for all but "range" facets.

  showCounts: Boolean!
  sortBy: FacetSortBy!
  sortOrder: FacetSortOrder!
  """
  The amount of items that are visible above the "Show more" button.
  """
  minimalVisibleOptions: Int!
  """
  If empty, this will show a localized version of "Show more".
  """
  showMoreLabel: String @localized
  """
  If empty, this will show a localized version of "Show less".
  """
  showLessLabel: String @localized
}

type CategoryFacetBlockConfig implements BaseFacetBlockConfig & FacetOptionsConfig {
  """
  The facet name that will be used in the url.
  """
  slug: String!
  label: String! @localized
  tooltip: String @localized @text(format: markdown)
  """
  [Default Open]: Collapsible and opened by default.
  [Default Collapsed]: Collapsible and collapsed by default.
  [Fully Shown]: Not collapsible.
  [Hidden]: Not visible on the page, can only be used in the url.
  """
  visibility: FacetVisibility!
  #These fields are required for all but "range" facets.

  showCounts: Boolean!
  sortBy: FacetSortBy!
  sortOrder: FacetSortOrder!
  """
  The amount of items that are visible above the "Show more" button.
  """
  minimalVisibleOptions: Int!
  """
  If empty, this will show a localized version of "Show more".
  """
  showMoreLabel: String @localized
  """
  If empty, this will show a localized version of "Show less".
  """
  showLessLabel: String @localized
}

type RangeFacetBlockConfig implements BaseFacetBlockConfig @amplience {
  """
  * A Commercetools facet expression as described in https://docs.commercetools.com/api/projects/products-search#facets.
  """
  commercetoolsAttribute: String!
    @example(
      items: [
        "variants.price.centAmount"
        "variants.attributes.value_height"
        "variants.attributes.value_length"
      ]
    )
  """
  The facet name that will be used in the url.
  """
  slug: String!
  label: String! @localized
  tooltip: String @localized @text(format: markdown)
  """
  [Default Open]: Collapsible and opened by default.
  [Default Collapsed]: Collapsible and collapsed by default.
  [Fully Shown]: Not collapsible.
  [Hidden]: Not visible on the page, can only be used in the url.
  """
  visibility: FacetVisibility!
  #These fields are required for all but "range" facets.
}

type FacetRangePreset {
  """
  A Commercetools facet expression as described in https://docs.commercetools.com/api/projects/products-search#facets.
  """
  commercetoolsAttribute: String!
    @example(
      items: ["variants.price.centAmount", "variants.attributes.value_length"]
    )
  min: Int
  max: Int
}

type FacetAttributePreset {
  """
  A Commercetools facet expression as described in https://docs.commercetools.com/api/projects/products-search#facets.
  """
  commercetoolsAttribute: String!
    @example(
      items: [
        "variants.attributes.brand.{lang}"
        "variants.attributes.colour.{lang}"
      ]
    )
  """
  The names of the checkboxes that need to be preselected.
  """
  selections: [String]! @localized
}

type ProductBanner @amplience {
  title: String @localized
  subtitle: String @localized
  link: LocalizablePageLink @link
  image: AmplienceImage!
  imageAlt: String! @localized
  alignment: ProductBannerAlignment!
  rowOnMobile: Int! @number(minimum: 1)
  rowOnDesktop: Int! @number(minimum: 1)
}

enum ProductBannerAlignment {
  pushLeft
  pushRight
  fullWidth
}
type CategoryFilter @amplience {
  position: Int!
  filterId: Int!
  filterGroupId: Int!
  attributeId: Int!
  displayText: String!
  templateName: String!
  defaultSortOrder: Int!
  isCollapsedByDefault: Int!
}

type BaseCategory @amplience {
  categoryCode: String!
  displayName: String!
  prettyURL: String!
}

type CategoryAttribute @amplience {
  title: String!
  text: String!
}

type CategoryMeta @amplience {
  branchNumber: Int!
  branchShortCode: String @text(minLength: 1, maxLength: 15) @filterable
  categoryCode: String!
  parentCategoryCode: String
  displayName: String
  categoryCopy: String
  metaDescription: String
  metaKeywords: String
  defaultSortOrder: String
  pageTitle: String
  altImageText: String
  header: String
  categoryCodePrefixed: String! @filterable
  prettyURL: String
  isNoNav: Int @number(minimum: 0, maximum: 1)
  breadcrumb: String
  filters: [CategoryFilter] @inline
  parentHierarchy: [BaseCategory] @list(minItems: 0) @inline
}
